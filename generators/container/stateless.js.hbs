/**
 *
 * {{properCase name }} Stateless Container
 *
 */
{{#if wantTransLate}}

/* global translate */
{{/if}}

import React from 'react';
// import PropTypes from 'prop-types';
// import { Actions } from 'react-native-router-flux';
import { compose } from 'redux';
import { connect } from 'react-redux';
import { createPropsSelector } from 'reselect-immutable-helpers';
import {
  Container, Content, Text,
} from 'native-base';

// utils => ... => containers => components => form
{{#if wantHeader}}
import AppHeader from 'components/AppHeader';
{{/if}}
{{#if wantFooter}}
import AppFooter from 'components/AppFooter';
{{/if}}

// ./
import styles from './styles';

const {{ properCase name }} = (props) => {
  return (
    <Container>
      {{#if wantHeader}}
      <AppHeader title="{{camelCase name}}" />

      {{/if}}
      <Content
        contentContainerStyle={styles.contentContainer}
        style={styles.content}
      >
        {{#if wantTransLate}}
        <Text style={styles.generateText}>{translate('generatorMessage')}</Text>
        {{else}}
        <Text style={styles.generateText}>This page is generated by the generator</Text>
        {{/if}}
      </Content>
      {{#if wantFooter}}

      <AppFooter pageName="{{camelCase name}}" />
      {{/if}}
    </Container>
  );
}

{{ properCase name }}.defaultProps = {
};

{{ properCase name }}.propTypes = {
};

const mapStateToProps = createPropsSelector({
  // write your code like this
  // generateText: selectGenerateText,
});

const mapDispatchToProps = (dispatch) => ({
  // Write your action code here
  dispatch,
});

const withConnect = connect(mapStateToProps, mapDispatchToProps);

export default compose(
  withConnect,
)({{ properCase name }});
